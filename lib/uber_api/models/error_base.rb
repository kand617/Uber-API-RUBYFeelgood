# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module UberApi
  class ErrorBase < BaseModel
    # TODO: Write general description for this method
    # @return [List of Errors]
    attr_accessor :errors

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :meta

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["errors"] = "errors"
        @hash["meta"] = "meta"
      end
      @hash
    end

    def initialize(errors = nil,
                   meta = nil)
      @errors = errors
      @meta = meta
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        # Parameter is an array, so we need to iterate through it
        errors = nil
        if hash["errors"] != nil
          errors = Array.new
          hash["errors"].each{|structure| errors << (Errors.from_hash(structure) if structure)}
        end
        meta = hash["meta"]

        # Create object from extracted values
        ErrorBase.new(errors,
                      meta)
      end
    end
  end
end
