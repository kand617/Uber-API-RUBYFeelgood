# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module UberApi
  class History < BaseModel
    # Distance travelled
    # @return [Float]
    attr_accessor :distance

    # Location where journey ended
    # @return [Location]
    attr_accessor :end_location

    # Time of journey end
    # @return [Integer]
    attr_accessor :end_time

    # The product that was used
    # @return [String]
    attr_accessor :product_id

    # Time when requested
    # @return [Integer]
    attr_accessor :request_time

    # Location of starting the journey
    # @return [Location]
    attr_accessor :start_location

    # Time of starting the journey
    # @return [Integer]
    attr_accessor :start_time

    # Status of the product e.g., completed
    # @return [String]
    attr_accessor :status

    # History item id
    # @return [String]
    attr_accessor :uuid

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["distance"] = "distance"
        @hash["end_location"] = "end_location"
        @hash["end_time"] = "end_time"
        @hash["product_id"] = "product_id"
        @hash["request_time"] = "request_time"
        @hash["start_location"] = "start_location"
        @hash["start_time"] = "start_time"
        @hash["status"] = "status"
        @hash["uuid"] = "uuid"
      end
      @hash
    end

    def initialize(distance = nil,
                   end_location = nil,
                   end_time = nil,
                   product_id = nil,
                   request_time = nil,
                   start_location = nil,
                   start_time = nil,
                   status = nil,
                   uuid = nil)
      @distance = distance
      @end_location = end_location
      @end_time = end_time
      @product_id = product_id
      @request_time = request_time
      @start_location = start_location
      @start_time = start_time
      @status = status
      @uuid = uuid
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        distance = hash["distance"]
        end_location = Location.from_hash(hash["end_location"]) if hash["end_location"]
        end_time = hash["end_time"]
        product_id = hash["product_id"]
        request_time = hash["request_time"]
        start_location = Location.from_hash(hash["start_location"]) if hash["start_location"]
        start_time = hash["start_time"]
        status = hash["status"]
        uuid = hash["uuid"]

        # Create object from extracted values
        History.new(distance,
                    end_location,
                    end_time,
                    product_id,
                    request_time,
                    start_location,
                    start_time,
                    status,
                    uuid)
      end
    end
  end
end
