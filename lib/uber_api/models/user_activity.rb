# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module UberApi
  class UserActivity < BaseModel
    # Total number of items available.
    # @return [Integer]
    attr_accessor :count

    # Information including the pickup location, dropoff location, request start time, request end time, and distance of requests (in miles), as well as the product type that was requested.
    # @return [List of History]
    attr_accessor :history

    # Number of items to retrieve (100 max).
    # @return [Integer]
    attr_accessor :limit

    # Position in pagination.
    # @return [Integer]
    attr_accessor :offset

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["count"] = "count"
        @hash["history"] = "history"
        @hash["limit"] = "limit"
        @hash["offset"] = "offset"
      end
      @hash
    end

    def initialize(count = nil,
                   history = nil,
                   limit = nil,
                   offset = nil)
      @count = count
      @history = history
      @limit = limit
      @offset = offset
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        count = hash["count"]
        # Parameter is an array, so we need to iterate through it
        history = nil
        if hash["history"] != nil
          history = Array.new
          hash["history"].each{|structure| history << (History.from_hash(structure) if structure)}
        end
        limit = hash["limit"]
        offset = hash["offset"]

        # Create object from extracted values
        UserActivity.new(count,
                         history,
                         limit,
                         offset)
      end
    end
  end
end
